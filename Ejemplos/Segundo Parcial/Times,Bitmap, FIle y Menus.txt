#include <windows.h>
#include <stdio.h>
#include "resource.h"

#define IDT_TIMER1 900
#define IDT_TIMER2 901

BOOL CALLBACK DialogProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam);
void Tick();
HINSTANCE hinst;

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
	PSTR cmdLine, int showCmd)
{
	HWND dialog;
	hinst = hInstance;
	dialog = CreateDialog(hInstance, MAKEINTRESOURCE(IDD_DIALOG1), NULL, DialogProc);
	if (!dialog)
	{
		MessageBox(NULL, "No se pudo crear el Dialog", "Creacion de Dialog", MB_ICONERROR);
		return 1;
	}
	ShowWindow(dialog, showCmd);
	UpdateWindow(dialog);
	MSG msg;
	while (GetMessage(&msg, 0, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}

	return (int)msg.wParam;
}

int value = 0;
HWND hStaticTimer1;
SYSTEMTIME localTime,systemTime;
BOOL CALLBACK DialogProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
	switch (msg)
	{
	case WM_INITDIALOG:
	{
		hStaticTimer1 = GetDlgItem(hWnd, IDC_STATIC_TIMER);
		SetTimer(hWnd,
			IDT_TIMER1,
			1000,
			NULL
		);
		SetTimer(hWnd,
			IDT_TIMER2,
			5000,
			NULL
		);
	}
	break;
	case WM_TIMER:
		switch (wParam)
		{
		case IDT_TIMER1:
			//Tick
			Tick();
			
			break;
		case IDT_TIMER2:
			MessageBox(NULL, "HAN PASADO 5 SEGUNDOS", "RECORDATORIO", NULL);
			KillTimer(hWnd, IDT_TIMER2);
			break;
		default:
			break;
		}
		break;
	case WM_COMMAND:
		switch (LOWORD(wParam))
		{
		case ID_ARCHIVO_ABRIR:
		{
			OPENFILENAME ofn;       // Estructura de Dialogo
			TCHAR szFile[260] = { 0 };      

			//Inicializacion
			ZeroMemory(&ofn, sizeof(ofn));
			ofn.lStructSize = sizeof(ofn);
			ofn.hwndOwner = hWnd;
			ofn.lpstrFile = szFile;
			ofn.nMaxFile = sizeof(szFile);
			ofn.lpstrFilter = "All\0*.*\0Text\0*.TXT\0PNG\0*.PNG";
			ofn.nFilterIndex = 1;
			ofn.lpstrFileTitle = NULL;
			ofn.nMaxFileTitle = 0;
			ofn.lpstrInitialDir = NULL;
			ofn.Flags = OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST;

			if (GetOpenFileName(&ofn) == TRUE)
			{
				// use ofn.lpstrFile

			}
		}
			break;
		case IDOK:
		{
			HBITMAP hImage = (HBITMAP)LoadImage(hinst, MAKEINTRESOURCE(IDB_BITMAP1), IMAGE_BITMAP, 0, 0, LR_DEFAULTCOLOR | LR_DEFAULTSIZE);
			if (!hImage)
			{
				MessageBox(NULL, "No cargo la imagen", "ERROR", MB_OK);
				return TRUE;
			}
			SendDlgItemMessage(hWnd, IDC_STATIC_IMAGE, STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)hImage);
			break;
		}
		case IDCANCEL:
		{

			break;
		}
		}
		break;
	case WM_CLOSE:
		DestroyWindow(hWnd);
		return TRUE;
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		return TRUE;
		break;
	default:
		return FALSE;
	}
	return FALSE;
}

void Tick()
{
	GetLocalTime(&localTime);
	GetSystemTime(&systemTime);
	TCHAR buff[1024];
	//snprintf(buff, 1024, "%d", value);
	//snprintf(buff, 1024, "La hora local es %02d:%02d:%02d", localTime.wHour, localTime.wMinute, localTime.wSecond);
	snprintf(buff, 1024, "La hora local es %02d:%02d:%02d", systemTime.wHour, systemTime.wMinute, systemTime.wSecond);
	SetWindowText(hStaticTimer1, buff);
}